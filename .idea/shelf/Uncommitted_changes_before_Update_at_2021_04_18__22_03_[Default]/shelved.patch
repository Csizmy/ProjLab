Index: src/Proto/Proto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Proto;\r\n\r\nimport Game_parts.*;\r\nimport Materials.*;\r\nimport Miners.*;\r\nimport Objects.*;\r\n\r\nimport java.io.File;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.FileWriter;\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.Random;\r\nimport java.util.Scanner;\r\n\r\npublic class Proto {\r\n    private Map map = new Map();\r\n\r\n    public void loadMap(String mapName){  // Panka\r\n        try{\r\n            File f = new File(\"maps\\\\\" + mapName + \".txt\");\r\n            Scanner sc = new Scanner(f);\r\n            int space_id = 0;\r\n            int miner_id = 50;\r\n            ArrayList<Asteroid> asteroids = new ArrayList<Asteroid>();\r\n            ArrayList<Settler> settlers = new ArrayList<Settler>();\r\n            ArrayList<Ufo> ufos = new ArrayList<Ufo>();\r\n            ArrayList<Robot> robots = new ArrayList<Robot>();\r\n            ArrayList<Teleport> teleports = new ArrayList<Teleport>();\r\n\r\n            while (sc.hasNextLine()) {\r\n\r\n                String line = sc.nextLine();\r\n                if (line == null) {\r\n                    break;\r\n                }\r\n                String array[] = line.split(\" \");\r\n\r\n                switch(array[0]){\r\n                    case \"*\":\r\n                        Asteroid a = new Asteroid(space_id, Integer.parseInt(array[1]), Integer.parseInt(array[2]), array[3]);\r\n                        //System.out.println(\"Aszteroida: \" + space_id);\r\n                        space_id++;\r\n                        asteroids.add(a);\r\n                        break;\r\n                    case \"+\":\r\n                        Teleport t1 = null, t2 = null;\r\n                        for (int i = 0; i < asteroids.size(); i++) {\r\n                            if (Integer.parseInt(array[1]) == asteroids.get(i).getId()) {\r\n                                t1 = new Teleport(space_id, asteroids.get(i));\r\n                                //System.out.println(\"Teleport t1: \" + space_id);\r\n                                space_id++;\r\n                            }\r\n                            if (Integer.parseInt(array[2]) == asteroids.get(i).getId()) {\r\n                                t2 = new Teleport(space_id, asteroids.get(i));\r\n                                //System.out.println(\"Teleport t2: \" + space_id);\r\n                                space_id++;\r\n                            }\r\n                        }\r\n                        t1.setPair(t2);\r\n                        t2.setPair(t1);\r\n                        teleports.add(t1);\r\n                        teleports.add(t2);\r\n                        break;\r\n                    case \"=\":\r\n                        int egyik = -1, masik = -1;\r\n                        for (int i = 0; i < asteroids.size(); i++) {\r\n                            if (Integer.parseInt(array[1]) == asteroids.get(i).getId()) {\r\n                                egyik = i;\r\n                            }\r\n                            if (Integer.parseInt(array[2]) == asteroids.get(i).getId()) {\r\n                                masik = i;\r\n                            }\r\n                        }\r\n                        asteroids.get(egyik).AddNeighbor(asteroids.get(masik));\r\n                        asteroids.get(masik).AddNeighbor(asteroids.get(egyik));\r\n                        //System.out.println(\"Asteroid \" + asteroids.get(masik).getId() + \" es Asteroid \" + asteroids.get(egyik).getId() + \" szomszedok\");\r\n                        break;\r\n                    case \"s\":\r\n                        for (int i = 0; i < asteroids.size(); i++) {\r\n                            if (Integer.parseInt(array[1]) == asteroids.get(i).getId()) {\r\n                                Settler s = new Settler(asteroids.get(i), miner_id);\r\n                                //System.out.println(\"Settler: \" + miner_id);\r\n                                miner_id++;\r\n                                settlers.add(s);\r\n                                break;\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"r\":\r\n                        for (int i = 0; i < asteroids.size(); i++) {\r\n                            if (Integer.parseInt(array[1]) == asteroids.get(i).getId()) {\r\n                                Robot r = new Robot(asteroids.get(i), miner_id);\r\n                                //System.out.println(\"Robot: \" + miner_id);\r\n                                miner_id++;\r\n                                robots.add(r);\r\n                                break;\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"u\":\r\n                        for (int i = 0; i < asteroids.size(); i++) {\r\n                            if (Integer.parseInt(array[1]) == asteroids.get(i).getId()) {\r\n                                Ufo u = new Ufo(asteroids.get(i), miner_id);\r\n                                //System.out.println(\"Ufo: \" + miner_id);\r\n                                miner_id++;\r\n                                ufos.add(u);\r\n                                break;\r\n                            }\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n\r\n            map.setAsteroids(asteroids);\r\n            map.setTeleports(teleports);\r\n            map.setSettlers(settlers);\r\n            map.setRobots(robots);\r\n            map.setUfos(ufos);\r\n            System.out.println(\"A pálya betöltése sikeres\");\r\n            sc.close();\r\n        }\r\n        catch (FileNotFoundException e){\r\n            System.out.println(\"A pálya betöltése sikertelen\");\r\n        }\r\n    }\r\n\r\n    public void list(String item){ //axelvoltam\r\n        map.list(item);\r\n    }\r\n\r\n    public void moveSettler(int settler_id, int asteroid_id){\r\n        for (int i = 0; i < map.getSettlers().size(); i++) {\r\n            if (map.getSettlers().get(i).getId() == settler_id) {\r\n                map.getSettlers().get(i).Move(asteroid_id);\r\n                if (asteroid_id == map.getSettlers().get(i).getAsteroid())\r\n                    System.out.println(\"Settler \" + settler_id + \" A mozgás sikeres ide: Asteroid \" + asteroid_id + \".\");\r\n                else\r\n                    System.out.println(\"Settler \" + settler_id + \" A mozgás sikertelen.\");\r\n            }\r\n        }\r\n    }//kristof ezt csinalja\r\n\r\n    public void stepRobot(int robot_id, String step){\r\n        for (int i = 0; i < map.getRobots().size(); i++) {\r\n            if (map.getRobots().get(i).getId() == robot_id) {\r\n                map.getRobots().get(i).Step(step);\r\n            }\r\n        }\r\n    }//kristof ezt csinalja\r\n\r\n    public void stepUfo(int ufo_id, String step){\r\n        for (int i = 0; i < map.getUfos().size(); i++) {\r\n            if (map.getUfos().get(i).getId() == ufo_id) {\r\n                map.getUfos().get(i).Step(step);\r\n            }\r\n        }\r\n    }//kristof ezt csinalja chacha\r\n\r\n    public void drillMiner(int settler_id){\r\n        for (int i = 0; i < map.getSettlers().size(); i++) {\r\n            if (map.getSettlers().get(i).getId() == settler_id) {\r\n                if (map.getSettlers().get(i).Drill()) {\r\n                    System.out.println(\"Settler \" + settler_id + \" A fúrás sikeres \" + (map.getAsteroids().get(map.getSettlers().get(i).getAsteroid()).getLayer() - map.getAsteroids().get(map.getSettlers().get(i).getAsteroid()).getDigged()) + \" réteg maradt Asteroid \" + map.getSettlers().get(i).getAsteroid());\r\n                }\r\n                else\r\n                    System.out.println(\"Settler \" + settler_id + \" A fúrás sikertelen Asteroid \" + map.getSettlers().get(i).getAsteroid());\r\n            }\r\n        }\r\n    }//kristof ezt csinalja\r\n\r\n    public void mineMiner(int settler_id){\r\n        for (int i = 0; i < map.getSettlers().size(); i++){\r\n            if (map.getSettlers().get(i).getId() == settler_id) {\r\n                if (map.getSettlers().get(i).Mine())\r\n                    System.out.println(\"Settler \" + settler_id + \" A bányászat sikeres Asteroid \" + map.getSettlers().get(i).getAsteroid() + map.getSettlers().get(i).getBackpack().get(map.getSettlers().get(i).getBackpack().size()-1));\r\n                else\r\n                    System.out.println(\"Settler \" + settler_id + \" A bányászat sikertelen Asteroid \" + map.getSettlers().get(i).getAsteroid());\r\n            }\r\n        }\r\n    }//kristof ezt csinaljasd\r\n\r\n    public void buildTeleport(int settler_id){ // Panka\r\n        int _id = map.getTeleports().get(map.getTeleports().size()-1).getId();\r\n        for (int i = 0; i < map.getSettlers().size(); i++) {\r\n            if(map.getSettlers().get(i).getId()==settler_id){\r\n\r\n                if(map.getSettlers().get(i).BuildTp(_id, _id+1)){\r\n                    System.out.println(\"Settler \"+ map.getSettlers().get(i).getId() + \" Az építés sikeres\");\r\n                }else{\r\n                    System.out.println(\"Settler \"+ map.getSettlers().get(i).getId() + \" Az építés sikertelen\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public void placeTeleport(int settler_id, int teleport_id){ // Panku\r\n        for (int i = 0; i < map.getSettlers().size(); i++) {\r\n            if(map.getSettlers().get(i).getId()==settler_id){\r\n                for (int j = 0; j < map.getTeleports().size(); j++) {\r\n                    if(map.getTeleports().get(j).getId()==teleport_id){\r\n                        if(map.getSettlers().get(i).PlaceTp(map.getTeleports().get(j))){\r\n                            System.out.println(\"Settler \"+settler_id+\" \"+teleport_id +\" Teleport lerakása sikeres\");\r\n                        }else{\r\n                            System.out.println(\"Settler \"+settler_id+\" \"+teleport_id +\" Teleport lerakása sikertelen\");\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public void perihelion(int asteroid_id){\r\n        if(map.getAsteroids().get(asteroid_id).getPerihelion()) {\r\n            map.getAsteroids().get(asteroid_id).setPerihelion(false);  //!!!!!!!!! itt asumoltam h false?\r\n            System.out.println(asteroid_id + \" Napközelből elvétel sikeres\");\r\n        }else{\r\n            map.getAsteroids().get(asteroid_id).setPerihelion(true);  //itt assumoltam hogy true?!!!!!!!!!!!!!!!\r\n            System.out.println(asteroid_id + \" Napközel sikeres\");\r\n        }\r\n    }\r\n\r\n    public void sunStorm(String target){\r\n\r\n        if(!target.equals(\"All\")){                // If not all than parse to integer\r\n            try{\r\n                int t = Integer.parseInt(target);\r\n                map.SolarStorm(t);\r\n            }catch(NumberFormatException ex){\r\n                System.out.println(\"Not set\");\r\n\r\n            }\r\n            System.out.println(target + \" Napvihar sikeres\");\r\n        }else if(target.equals(\"All\")){\r\n            map.SolarStorm(-1);\r\n            System.out.println(target + \" Napvihar sikeres\");\r\n        }else{\r\n            System.out.println(target + \" Napvihar sikertelen\");\r\n        }\r\n    } // ha \"All\",mindet eléri, ha egy szám, akkor át kell alakítani!!\r\n\r\n    public void addToBackpack(String material, int settler_id){  // Panku\r\n        for (int i = 0; i < map.getSettlers().size(); i++) {\r\n            if(map.getSettlers().get(i).getId()==settler_id){\r\n                switch (material){\r\n                    case \"Water\":\r\n                        Water w = new Water(null);\r\n                        if(map.getSettlers().get(i).AddMaterial(w)){\r\n                            System.out.println(map.getSettlers().get(i).getId()+\" \"+material+\" Hozzáadás sikeres\");\r\n                        }else{\r\n                            System.out.println(map.getSettlers().get(i).getId()+\" \"+material+\" Hozzáadás sikertelen\");\r\n                        }\r\n                        break;\r\n                    case \"Iron\":\r\n                        Iron ir = new Iron(null);\r\n                        if(map.getSettlers().get(i).AddMaterial(ir)){\r\n                            System.out.println(map.getSettlers().get(i).getId()+\" \"+material+\" Hozzáadás sikeres\");\r\n                        }else{\r\n                            System.out.println(map.getSettlers().get(i).getId()+\" \"+material+\" Hozzáadás sikertelen\");\r\n                        }\r\n                        break;\r\n                    case \"Coal\":\r\n                        Coal c = new Coal(null);\r\n                        if(map.getSettlers().get(i).AddMaterial(c)){\r\n                            System.out.println(map.getSettlers().get(i).getId()+\" \"+material+\" Hozzáadás sikeres\");\r\n                        }else{\r\n                            System.out.println(map.getSettlers().get(i).getId()+\" \"+material+\" Hozzáadás sikertelen\");\r\n                        }\r\n                        break;\r\n                    case \"Uranium\":\r\n                        Uranium u = new Uranium(null);\r\n                        if(map.getSettlers().get(i).AddMaterial(u)){\r\n                            System.out.println(map.getSettlers().get(i).getId()+\" \"+material+\" Hozzáadás sikeres\");\r\n                        }else{\r\n                            System.out.println(map.getSettlers().get(i).getId()+\" \"+material+\" Hozzáadás sikertelen\");\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public void backPack(int settler_id){ //axel\r\n\r\n        for (Settler s: map.getSettlers()){\r\n            if(s.getId()==settler_id){\r\n                s.listBackPack();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public void neighbors(int asteroid_id){ //axel\r\n        for(Asteroid a: map.getAsteroids()){\r\n            if(a.getId()==asteroid_id){\r\n                a.listNeighbors();\r\n            }\r\n        }\r\n    }\r\n\r\n    //----------------------------- NEW ROBOT NOT ADDED TO THE LIST IN THE BUILDROBOT!!!!!!!!!! ------------------------------------------\r\n    public void buildRobot(int settler_id){\r\n\r\n        Settler settler = map.getSettlers().get(settler_id - 50);\r\n\r\n        //Giving enough material to build a robot to Settler 50.\r\n        Uranium u = new Uranium(null);\r\n        map.getSettlers().get(0).AddMaterial(u);\r\n        Iron ir = new Iron(null);\r\n        map.getSettlers().get(0).AddMaterial(ir);\r\n        Coal c = new Coal(null);\r\n        map.getSettlers().get(0).AddMaterial(c);\r\n\r\n        //The robot's id - one higher than ever before.\r\n        int new_id = 50;\r\n        for (int x = 0; x < map.getUfos().size();x++) {\r\n            int temp = map.getUfos().get(x).getId();\r\n            if(temp >new_id) new_id = temp;\r\n        }\r\n        for (int y = 0; y < map.getSettlers().size();y++) {\r\n            int temp = map.getSettlers().get(y).getId();\r\n            if(temp >new_id) new_id = temp;\r\n        }\r\n        for (int z = 0; z < map.getRobots().size();z++) {\r\n            int temp = map.getRobots().get(z).getId();\r\n            if(temp > new_id) new_id = temp;\r\n        }\r\n        new_id += 1;\r\n\r\n        if (settler.BuildRobot(new_id)) {\r\n            //a BuildRobot nem adja hozzá magától, kell egy add most !!!!!!!!!!!!!!!!!!\r\n            Miner robot = map.getAsteroids().get(settler.getAsteroid()).getMiners().get(map.getAsteroids().get(settler.getAsteroid()).getMiners().size() - 1);\r\n            map.getRobots().add((Robot) robot);\r\n\r\n            System.out.println(\"Settler \" + settler.getId() + \" \" + map.getRobots().get(map.getRobots().size() - 1).getId() + \" robot megépítve.\");\r\n        }\r\n        else {System.out.println(\"Hiba, nincs elég anyag.\");}\r\n\r\n    }\r\n\r\n    //Add a settler to an existing asteroid.\r\n    public void addSettler(int asteroid_id){\r\n\r\n        //Get the asteroid from map.\r\n\r\n        //Get the highest existing ID number.\r\n        int new_id = 50;\r\n        for (int i = 0; i < map.getUfos().size();i++) {\r\n            int temp = map.getUfos().get(i).getId();\r\n            if(temp >new_id) new_id = temp;\r\n        }\r\n        for (int i = 0; i < map.getSettlers().size();i++) {\r\n            int temp = map.getSettlers().get(i).getId();\r\n            if(temp >new_id) new_id = temp;\r\n        }\r\n        for (int i = 0; i < map.getRobots().size();i++) {\r\n            int temp = map.getRobots().get(i).getId();\r\n            if(temp >new_id) new_id = temp;\r\n        }\r\n        new_id += 1;\r\n\r\n        //Giving a new id - one higher than ever before - to the settler.\r\n        Settler settler = new Settler(map.getAsteroids().get(asteroid_id), new_id);\r\n        map.getSettlers().add(settler);\r\n\r\n        //if the settler is on the asteroid it was successful!\r\n        if (map.getAsteroids().get(asteroid_id).getMiners().contains(settler)){\r\n        System.out.println(\"Settler \" + settler.getId() + \" sikeresen létrejött Asteroid \" + map.getAsteroids().get(asteroid_id).getId());}\r\n        else{\r\n        System.out.println(\"A Settler ezen az aszteroidán nem tudott létrejönni.\");}\r\n    }\r\n\r\n    //Add an Ufo to an existing asteroid.\r\n    public void addUfo(int asteroid_id){\r\n\r\n        //Get the asteroid from map, and get the number of settlers and robots and Ufos set his ID to that number + 50\r\n        int new_id = 50;\r\n        for (int i = 0; i < map.getUfos().size();i++) {\r\n            int temp = map.getUfos().get(i).getId();\r\n            if(temp >new_id) new_id = temp;\r\n        }\r\n        for (int i = 0; i < map.getSettlers().size();i++) {\r\n            int temp = map.getSettlers().get(i).getId();\r\n            if(temp >new_id) new_id = temp;\r\n        }\r\n        for (int i = 0; i < map.getRobots().size();i++) {\r\n            int temp = map.getRobots().get(i).getId();\r\n            if(temp >new_id) new_id = temp;\r\n        }\r\n        new_id += 1;\r\n\r\n        Ufo ufo = new Ufo(map.getAsteroids().get(asteroid_id), new_id);\r\n        map.getUfos().add(ufo);\r\n\r\n        //if the settler is on the asteroid it was successful!\r\n        if (map.getAsteroids().get(asteroid_id).getMiners().contains(ufo)){\r\n            System.out.println(\"Ufo \" + ufo.getId() + \" sikeresen létrejött Asteroid \" + map.getAsteroids().get(asteroid_id).getId());}\r\n        else{\r\n            System.out.println(\"Az Ufo ezen az aszteroidán nem tudott létrejönni.\");}\r\n    }\r\n\r\n    //Add a Robot to an existing asteroid.\r\n    public void addRobot(int asteroid_id){\r\n\r\n        //Get the asteroid from map, and get the number of settlers and set his ID to that number + 50\r\n        int new_id = 50;\r\n        for (int i = 0; i < map.getUfos().size();i++) {\r\n            int temp = map.getUfos().get(i).getId();\r\n            if(temp >new_id) new_id = temp;\r\n        }\r\n        for (int i = 0; i < map.getSettlers().size();i++) {\r\n            int temp = map.getSettlers().get(i).getId();\r\n            if(temp >new_id) new_id = temp;\r\n        }\r\n        for (int i = 0; i < map.getRobots().size();i++) {\r\n            int temp = map.getRobots().get(i).getId();\r\n            if(temp >new_id) new_id = temp;\r\n        }\r\n        new_id += 1;\r\n\r\n        Robot robot = new Robot(map.getAsteroids().get(asteroid_id), new_id);\r\n        map.getRobots().add(robot);\r\n\r\n        //if the settler is on the asteroid it was successful!\r\n        if (map.getAsteroids().get(asteroid_id).getMiners().contains(robot)){\r\n            System.out.println(\"Robot \" + robot.getId() + \" sikeresen létrejött Asteroid \" + map.getAsteroids().get(asteroid_id).getId());}\r\n        else{\r\n            System.out.println(\"A Robot ezen az aszteroidán nem tudott létrejönni.\");}\r\n    }\r\n\r\n    public void save(String saveName){  //ide elv nem kene string!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! gamet is nézd\r\n        File f = new File(\"maps\\\\\" + saveName + \".txt\");\r\n        try {\r\n            FileWriter fWriter = new FileWriter(f);\r\n            for (Settler s: map.getSettlers()){         // Settler;Position;Backpack\r\n                fWriter.write(\"s;\" + s.getAsteroid());\r\n                for(Material m: s.getBackpack()){\r\n                    fWriter.write(\" \" + m.getName());\r\n                }\r\n                fWriter.write(\"\\n\");\r\n            }\r\n\r\n            for (Robot r: map.getRobots()){             //Robot;Position\r\n                fWriter.write(\"r;\" + r.getAsteroid()+\"\\n\");\r\n            }\r\n\r\n            for (Ufo u: map.getUfos()){                 //Ufo;Position\r\n                fWriter.write(\"u;\" + u.getAsteroid()+\"\\n\");\r\n            }\r\n\r\n            for (Teleport t: map.getTeleports()){                 //Ufo;Position\r\n                fWriter.write(\"t;\" + t.getNeighbours().get(0).getId());\r\n                fWriter.write(\";\" + t.getPair().getId()+\"\\n\");\r\n            }\r\n\r\n            for (Asteroid a: map.getAsteroids()){       //Asteroid;Neighbours;Material;Layer;Digged\r\n                fWriter.write(\"*;\");\r\n                for(Spacething s: a.getNeighbours()){\r\n                    fWriter.write(s.getId() + \" \");\r\n                }\r\n                if(a.getMaterial() != null)\r\n                    fWriter.write(\";\" + a.getMaterial().getName());\r\n                else\r\n                    fWriter.write(\";null\");\r\n                fWriter.write(\";\" + a.getLayer());\r\n                fWriter.write(\";\" + a.getDigged());\r\n                fWriter.write(\"\\n\");\r\n            }\r\n\r\n            fWriter.close();\r\n            System.out.println(\"Mentés sikeres\");\r\n        } catch (IOException e) {\r\n            System.out.println(\"Sikertelen mentés\");\r\n            e.printStackTrace();\r\n        }\r\n\r\n    }\r\n\r\n    public void step(){\r\n        for (int i = 0; i < map.getRobots().size(); i++) {\r\n            map.getRobots().get(i).Step(\"\");\r\n        }\r\n        for (int i = 0; i < map.getUfos().size(); i++) {\r\n            map.getUfos().get(i).Step(\"\");\r\n        }\r\n        for (int i = 0; i < map.getTeleports().size(); i++) {\r\n            map.getTeleports().get(i).Step(\"\");\r\n        }\r\n        map.Step(\"\");\r\n    }\r\n\r\n    public Map getMap() {\r\n        return map;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Proto/Proto.java b/src/Proto/Proto.java
--- a/src/Proto/Proto.java	(revision 049ea05f1f7b8f061e7fcf360f149956cdcb7f48)
+++ b/src/Proto/Proto.java	(date 1618776174846)
@@ -172,10 +172,7 @@
     public void mineMiner(int settler_id){
         for (int i = 0; i < map.getSettlers().size(); i++){
             if (map.getSettlers().get(i).getId() == settler_id) {
-                if (map.getSettlers().get(i).Mine())
-                    System.out.println("Settler " + settler_id + " A bányászat sikeres Asteroid " + map.getSettlers().get(i).getAsteroid() + map.getSettlers().get(i).getBackpack().get(map.getSettlers().get(i).getBackpack().size()-1));
-                else
-                    System.out.println("Settler " + settler_id + " A bányászat sikertelen Asteroid " + map.getSettlers().get(i).getAsteroid());
+                map.getSettlers().get(i).Mine();
             }
         }
     }//kristof ezt csinaljasd
@@ -184,7 +181,6 @@
         int _id = map.getTeleports().get(map.getTeleports().size()-1).getId();
         for (int i = 0; i < map.getSettlers().size(); i++) {
             if(map.getSettlers().get(i).getId()==settler_id){
-
                 if(map.getSettlers().get(i).BuildTp(_id, _id+1)){
                     System.out.println("Settler "+ map.getSettlers().get(i).getId() + " Az építés sikeres");
                 }else{
